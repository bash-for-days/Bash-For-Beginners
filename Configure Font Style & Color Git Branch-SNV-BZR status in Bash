
Configure the Font Style and Color of a git Branch, and the SNV and BZR status in bash. 

- - -

### List of Bash Colors

	#!/bin/bash
	function __prompt
	{

### These are the bash color variables that may be used to configure the color of output in your bash shell:

Black 

	local BLACK=“\[\033[0;30m\]”   

Dark Grey

	local DGREY=“[\033[1;30m\]” 
	
Red

    local RED="\[\033[0;31m\]"     
	
Light Red

	local LRED="\[\033[1;31m\]"
	
Green

	local GREEN="\[\033[0;32m\]"

Light Green

    local LGREEN="\[\033[1;32m\]"

Brown

    local BROWN="\[\033[0;33m\]"   

Yellow

    local YELLOW="\[\033[1;33m\]"  

Blue

    local BLUE="\[\033[0;34m\]"

Light Blue

    local LBLUE="\[\033[1;34m\]"

Purple

    local PURPLE="\[\033[0;35m\]"  

Light Purple

    local LPURPLE="\[\033[1;35m\]" 

Cyan

    local CYAN="\[\033[0;36m\]"

Light Cyan

	local LCYAN="\[\033[1;36m\]"

Light Grey

	local LGREY="\[\033[0;37m\]"# Light Gray

White

	local WHITE="\[\033[1;37m\]
	
### Reset Color Assignment

	# Color Reset
    local RESET="\[\033[0m\]"      
	
### Bold Font Assignment 

    local BOLD="\[\033[;1m\]"      
	# Bold

### Resets and Assigns a Font Style and Color to the, Branch, SVN, and Git Status (optionally sets color for BZR status)

	#!/bin/bash
    # Base Prompt
    PS1="$LCYAN\h:$YELLOW\w$LCYAN \\\$$RESET "
    local dirty
    local branch

	# Look for Git status

    if git status &>/dev/null; then
        if git status -uno -s | grep -q . ; then
            dirty=1
        fi
        branch=$(git branch --color=never | sed -ne 's/* //p')

    # Look for Subversion status

    else
        svn_info=$( (svn info | grep ^URL) 2>/dev/null )
        if [[ ! -z "$svn_info" ]] ; then
            branch_pattern="^URL: .*/(branch(es)?|tags)/([^/]+)"
            trunk_pattern="^URL: .*/trunk(/.*)?$"
            if [[ $svn_info =~ $branch_pattern ]]; then
                branch=${BASH_REMATCH[3]}
            elif [[ $svn_info =~ $trunk_pattern ]]; then
                branch='trunk'
            else
                branch='SVN'
            fi
            dirty=$(svn status -q)
        fi
    fi

	# Assign a Font Style and Color to your Release Branch if you have one

	release_pattern=”^ checkout of branch: .*/release/([^/] )”

	# To Add BZR Status set the “Dirty” flag to:

		dirty=$(bzr status -SV)

	# Set the branch like this instead: 

	branch=${BASH_REMATCH[1]}

	# The patterns need to be matched dependent on your repo scheme. For ours, this is what we use:

	trunk_pattern=”^ checkout of branch: ./trunk/$” branch_pattern=”^ checkout of branch: ./feature/([^/] )”

	# Displays the Branch in a Green Font, Local Directory in a Light Green Font, and the Git Status in a Light Red Font

    if [[ ! -z "$branch" ]]; then
        local status_color
        if [[ -z "$dirty" ]] ; then
            status_color=$LGREEN
        else
            status_color=$LRED
        fi
        
	# Rests and Assigns a Bold Light Cyan Font to PS1 
	PS1=“$LCYAN($BOLD$status_color$branch$LCYAN)$RESET $PS1”
    fi
	}

	if [[ -z “$PROMPT_COMMAND” ]]; then
	PROMPT_COMMAND=__prompt
	else
	PROMPT_COMMAND=“$PROMPT_COMMAND ; __prompt”
	fi
	__prompt

### Place this script into the following Directory:

	~./bash 

### Save the file as:

	prompt.sh

### Then add:

	source ~/.bash/prompt.sh

### Into this Directory:

	.bashrc

### Now the branch has been set to display a Red font for “Dirty”, and a Green font for “Clean”.


#####Adapted from from:
https://github.com/hoelzro/bashrc/blob/master/colors.sh 

https://blog.petdance.com/2019/10/02/bash-color-prompt-hostname


